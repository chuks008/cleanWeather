apply plugin: 'com.android.library'

def root = rootProject.extensions.getByName("ext")

android {
    compileSdkVersion root.compiledSdkVersion

    defaultConfig {
        minSdkVersion root.minSdkVersion
        targetSdkVersion root.compiledSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.7
        sourceCompatibility 1.7
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "com.android.support:appcompat-v7:$rootProject.ext.appCompatVersion"
    implementation "com.google.code.gson:gson:$rootProject.ext.gsonVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.gsonConverterVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    compileOnly "javax.annotation:jsr250-api:$rootProject.ext.jsrVersion"

    testImplementation "junit:junit:$root.jUnitVersion"
    testImplementation "org.mockito:mockito-core:$root.mockitoVersion"

    implementation project(":domain")
    testImplementation 'junit:junit:4.12'
    implementation 'javax.inject:javax.inject:1'
}
