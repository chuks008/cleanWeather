apply plugin: 'com.android.application'

def root = rootProject.extensions.getByName("ext")

android {
    compileSdkVersion root.compiledSdkVersion
    defaultConfig {
        applicationId "com.desihost.android.apipractical"
        buildToolsVersion root.buildToolsVersion
        compileSdkVersion root.compiledSdkVersion
        minSdkVersion root.minSdkVersion
        targetSdkVersion root.targetSdkVersion
        versionCode root.versionCode
        versionName root.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$root.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "com.android.support:appcompat-v7:$root.appCompatVersion"
    testImplementation "junit:junit:$root.jUnitVersion"
    testImplementation "org.mockito:mockito-core:$root.mockitoVersion"

    implementation "io.reactivex.rxjava2:rxandroid:$root.rxandroidVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$root.daggerVersion"
    implementation "com.google.dagger:dagger:$root.daggerVersion"
//    provided "javax.annotation:jsr250-api:$root.jsrVersion"
    compileOnly "org.glassfish:javax.annotation:10.0-b28"

    implementation project(':domain')
    implementation project(':data')
}
